# Generated by Django 4.0 on 2023-03-26 10:08

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answer_text', models.CharField(max_length=512, unique=True, verbose_name='текст ответа')),
                ('correct', models.BooleanField(verbose_name='правильныйответ')),
            ],
            options={
                'verbose_name': 'ответ',
                'verbose_name_plural': 'ответы',
                'ordering': ('?',),
            },
        ),
        migrations.CreateModel(
            name='Attempt',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('success', models.BooleanField(auto_created=True, default=False, verbose_name='результат выполнения теста (сдал/не сдал)')),
                ('date_test', models.DateField(auto_now_add=True, verbose_name='дата прохождения пользователем теста')),
                ('result', models.DecimalField(decimal_places=2, max_digits=5, null=True, verbose_name='процент правильных ответов')),
            ],
            options={
                'verbose_name': 'пользователь + тест',
                'verbose_name_plural': 'пользователи + тесты',
                'ordering': ('subject',),
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_text', models.CharField(max_length=512, unique=True, verbose_name='текст вопроса')),
            ],
            options={
                'verbose_name': 'вопрос',
                'verbose_name_plural': 'вопросы',
                'ordering': ('?',),
            },
        ),
        migrations.CreateModel(
            name='Test',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=512, unique=True, verbose_name='название')),
                ('date_creation', models.DateField(auto_now_add=True, verbose_name='дата создания')),
                ('prize', models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(10), django.core.validators.MaxValueValidator(100)], verbose_name='награда')),
                ('percent_success', models.PositiveSmallIntegerField(validators=[django.core.validators.MaxValueValidator(100)], verbose_name='процент правильных ответов для прохождения')),
            ],
            options={
                'verbose_name': 'тест',
                'verbose_name_plural': 'тесты',
                'ordering': ('-date_creation',),
            },
        ),
        migrations.CreateModel(
            name='Theme',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=256, unique=True, verbose_name='название')),
                ('slug', models.SlugField(verbose_name='слаг/аббревиатура темы')),
            ],
            options={
                'verbose_name': 'тематика теста',
                'verbose_name_plural': 'тематики тестов',
                'ordering': ('title',),
            },
        ),
        migrations.CreateModel(
            name='TestingData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.answer', verbose_name='ответ')),
                ('attempt', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='testing_data', to='core.attempt', verbose_name='попытка')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.question', verbose_name='вопрос')),
            ],
            options={
                'verbose_name': 'вопрос + ответ пользователя',
                'verbose_name_plural': 'вопросы + ответы пользователей',
                'ordering': ('attempt',),
            },
        ),
    ]
