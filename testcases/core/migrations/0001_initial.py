# Generated by Django 4.0 on 2023-03-19 07:29

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('body_text', models.CharField(max_length=512, unique=True, verbose_name='текст ответа')),
                ('correct', models.BooleanField(verbose_name='правильныйответ')),
            ],
            options={
                'verbose_name': 'ответ',
                'verbose_name_plural': 'ответы',
                'ordering': ('body_text',),
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('body_text', models.CharField(max_length=512, unique=True, verbose_name='текст вопроса')),
                ('one_correct_answer', models.BooleanField(default=True, verbose_name='один правильный ответ')),
            ],
            options={
                'verbose_name': 'вопрос',
                'verbose_name_plural': 'вопросы',
                'ordering': ('body_text',),
            },
        ),
        migrations.CreateModel(
            name='Test',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=512, unique=True, verbose_name='название')),
                ('date_creation', models.DateField(auto_now_add=True, verbose_name='дата создания')),
                ('prize', models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(10), django.core.validators.MaxValueValidator(100)], verbose_name='награда')),
                ('percent_success', models.PositiveSmallIntegerField(validators=[django.core.validators.MaxValueValidator(100)], verbose_name='процент правильных ответов для прохождения')),
            ],
            options={
                'verbose_name': 'тест',
                'verbose_name_plural': 'тесты',
                'ordering': ('-date_creation',),
            },
        ),
        migrations.CreateModel(
            name='Theme',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=256, unique=True, verbose_name='название')),
                ('slug', models.SlugField()),
            ],
            options={
                'verbose_name': 'тематика теста',
                'verbose_name_plural': 'тематики тестов',
                'ordering': ('title',),
            },
        ),
        migrations.CreateModel(
            name='UserQuestionAnswer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_answering', models.DateTimeField(auto_now_add=True, verbose_name='дата ответа пользователя на вопрос')),
            ],
            options={
                'verbose_name': 'вопрос + пользователь',
                'verbose_name_plural': 'вопросы + пользователи',
                'ordering': ('subject',),
            },
        ),
        migrations.CreateModel(
            name='UserTest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start', models.BooleanField(auto_created=True, default=True, verbose_name='пользователь начал проходить тест')),
                ('finish', models.BooleanField(default=False, verbose_name='пользователь окончил прохождение теста')),
            ],
            options={
                'verbose_name': 'пользователь + тест',
                'verbose_name_plural': 'пользователи + тесты',
                'ordering': ('testcase',),
            },
        ),
    ]
